{"version":3,"sources":["view/RegisterView.js","view/RegisterView.module.css"],"names":["console","log","s","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","className","postcard","formrow","type","onChange","edit","floatingButton","Component","mapDispatchToProps","authOperations","register","connect","module","exports"],"mappings":"0MAIAA,QAAQC,IAAIC,K,IACNC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,qJAEA,uBACEW,SAAUD,KAAKL,aACfO,aAAa,MACbC,UAAWlB,IAAEmB,SAHf,UAKE,qBAAKD,UAAWlB,IAAEoB,QAAlB,SACE,uDAEE,uBACEC,KAAK,OACLlB,KAAK,OACLK,MAAOL,EACPmB,SAAUP,KAAKT,oBAIrB,qBAAKY,UAAWlB,IAAEoB,QAAlB,SACE,mEAEE,uBACEC,KAAK,QACLlB,KAAK,QACLK,MAAOJ,EACPkB,SAAUP,KAAKT,oBAIrB,qBAAKY,UAAWlB,IAAEoB,QAAlB,SACE,yEAEE,uBACEC,KAAK,WACLlB,KAAK,WACLK,MAAOH,EACPiB,SAAUP,KAAKT,aACfY,UAAWlB,IAAEuB,YAInB,wBAAQL,UAAWlB,IAAEwB,eAAgBH,KAAK,SAA1C,oI,GAjEiBI,aA0ErBC,EAAqB,CACzBZ,WAAYa,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC5B,I,mBClFjD6B,EAAOC,QAAU,CAAC,SAAW,+BAA+B,QAAU,8BAA8B,eAAiB,qCAAqC,KAAO","file":"static/js/5.257bf705.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport s from \"./RegisterView.module.css\";\r\nconsole.log(s);\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница регистрации</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\"\r\n          className={s.postcard}\r\n        >\r\n          <div className={s.formrow}>\r\n            <label>\r\n              Имя\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={s.formrow}>\r\n            <label>\r\n              Почта\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={s.formrow}>\r\n            <label>\r\n              Пароль\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n                className={s.edit}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button className={s.floatingButton} type=\"submit\">\r\n            Зарегистрироваться\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postcard\":\"RegisterView_postcard__PzvBd\",\"formrow\":\"RegisterView_formrow__26y39\",\"floatingButton\":\"RegisterView_floatingButton__1Jizy\",\"edit\":\"RegisterView_edit__5pOzn\"};"],"sourceRoot":""}