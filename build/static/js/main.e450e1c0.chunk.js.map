{"version":3,"sources":["redux/actions/create-user.js","redux/actions/userActions.js","redux/actions/todos-operations.js","components/Form/Form.js","redux/actions/contacts-selectors.js","redux/reducers/allUsersReducer.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js"],"names":["createAction","user","payload","name","number","id","addTodoRequest","addTodoSuccess","addTodoError","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","changeFilter","axios","defaults","baseURL","addTodo","text","dispatch","actions","post","then","data","catch","error","deleteTodo","todoId","delete","Form","loginInputId","shortid","generate","numberInputId","objId","state","handleChange","event","setState","unId","currentTarget","value","handleSubmit","e","preventDefault","props","y","reset","onSubmit","this","htmlFor","placeholder","type","onChange","Component","mapDispatchToProps","todosOperations","connect","getFilter","allUsers","filter","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","includes","createReducer","elem","loading","_","combineReducers","getFilterSelctors","target","className","onDelete","visibleSelectors","map","onClick","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","next","action","console","log","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e450e1c0.chunk.js","sourcesContent":["import { number } from \"prop-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nconst createUser = createAction(\"actions/create_User\", (user) => {\r\n  return {\r\n    payload: {\r\n      name: user.name,\r\n      number: user.number,\r\n      id: user.id,\r\n    },\r\n  };\r\n});\r\n\r\nexport default createUser;\r\n","import { number } from \"prop-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addTodoRequest = createAction(\"contacts/addTodoRequest\");\r\nconst addTodoSuccess = createAction(\"contacts/addTodoSuccess\");\r\nconst addTodoError = createAction(\"contacts/addTodoError\");\r\n\r\nconst deleteTodoRequest = createAction(\"contacts/deleteTodoRequest\");\r\nconst deleteTodoSuccess = createAction(\"contacts/deleteTodoSuccess\");\r\nconst deleteTodoError = createAction(\"contacts/deleteTodoError\");\r\n\r\nexport const changeFilter = createAction(\"CHANGE_FILTER\");\r\n\r\n//addTodo,\r\nexport default {\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./userActions\";\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addTodo = (text) => (dispatch) => {\r\n  dispatch(actions.addTodoRequest());\r\n  axios\r\n    .post(\"/contacts\", text)\r\n    .then(({ data }) => dispatch(actions.addTodoSuccess(data)))\r\n    .catch((error) => dispatch(actions.addTodoError(error)));\r\n};\r\n\r\nconst deleteTodo = (todoId) => (dispatch) => {\r\n  dispatch(actions.deleteTodoRequest());\r\n  axios\r\n    .delete(`/contacts/${todoId}`)\r\n    .then(() => dispatch(actions.deleteTodoSuccess(todoId)))\r\n    .catch((error) => dispatch(actions.deleteTodoError(error)));\r\n};\r\nexport default { addTodo, deleteTodo };\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as unId } from \"uuid\";\r\n\r\n//todo:\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/actions/create-user\";\r\nimport todosOperations from \"../../redux/actions/todos-operations\";\r\nclass Form extends Component {\r\n  loginInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  objId = shortid.generate();\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n\r\n    this.setState({\r\n      id: unId(),\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //todo: редакс передал создание нового юзера\r\n    if (this.state.name !== \"\") {\r\n      this.props.y(this.state);\r\n      this.reset();\r\n      return;\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.loginInputId}>\r\n          <input\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.loginInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId}>\r\n          <br />\r\n\r\n          <input\r\n            placeholder=\"Number\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  y: todosOperations.addTodo,\r\n};\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.allUsers.filter;\r\nconst getAllContacts = (state) => state.allUsers.contacts;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\nexport default { getFilter, getVisibleContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n//import actions from \"../actions/userActions\";\r\nimport actions from \"../actions/userActions\";\r\nconst {\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  changeFilter,\r\n} = actions;\r\nconst contacts = createReducer([], {\r\n  [addTodoSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteTodoSuccess]: (state, { payload }) =>\r\n    state.filter((elem) => elem.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addTodoRequest]: () => true,\r\n  [addTodoSuccess]: () => false,\r\n  [addTodoError]: () => false,\r\n  [deleteTodoRequest]: () => true,\r\n  [deleteTodoSuccess]: () => false,\r\n  [deleteTodoError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import React, { Component } from \"react\";\r\n\r\nimport { changeFilter } from \"../../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport getFilterSelctors from \"../../redux/actions/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className=\"TodoFilter__input\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilterSelctors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { v4 as unId } from \"uuid\";\r\nimport Contacts from \"./Contacts.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { todosOperations, visibleSelectors } from \"../../redux/actions/index\";\r\n\r\nconst ContactList = ({ allUsers, onDelete }) => (\r\n  <ul className=\"TodoList\">\r\n    {allUsers.map(({ id, name, number }) => (\r\n      <li key={unId()} className=\"listStyle\">\r\n        <p className=\"TodoList__text\">\r\n          {name}:{number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDelete(id)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allUsers: visibleSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: (id) => todosOperations.deleteTodo(id),\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport { reducer } from \"./actions/index\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n//import storage from \"redux-persist/lib/storage\";\r\nconst myMiddleware = (store) => (next) => (action) => {\r\n  console.log(\"моя прослойка\", action);\r\n\r\n  next(action);\r\n};\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n  myMiddleware,\r\n];\r\n// const todosPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\nconst store = configureStore({\r\n  reducer: {\r\n    allUsers: reducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n//const persistor = persistStore(store);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\n//import { PersistGate } from \"redux-persist/integration/react\";\r\nimport store from \"./redux/store.js\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}